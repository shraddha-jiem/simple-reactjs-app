name: CI-CD

on:
  pull_request:
    branches: [poc]
    types: [closed]

jobs:
  build:
    if: ${{github.event.pull_request.merged == true && github.ref_name == 'poc'}}
    name: CI Pipeline
    runs-on: ubuntu-latest
    environment: poc
    strategy:
      matrix:
        node-version: [16.x]
        appname: ['aws-codedeploy-app']
        deploy-group: ['poc-react-app']
        s3-bucket: ['aws-codedeploy-poc-react-app']
        s3-filename: ['poc-react-app-${{ github.run_number }}']

    steps:
      - name: Checkout the Repo
        uses: actions/checkout@v3
      
      - name: Set up Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v3
        with: 
          node-version: ${{ matrix.node-version }}
      
      # Build the React App
      - name: Install Dependencies and Build
        run: |          
          npm install
          npm run build
          cp appspec.yml ./build
          
      # Install AWS CLI 2
      - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Push build to AWS S3
      - name: Push build to S3 using AWS Deploy push
        run: |
          aws deploy push \
          --application-name ${{ matrix.appname }} \
          --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
          --ignore-hidden-files \
          --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
          --source ./build/
          
  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    needs: build
    environment: poc
    strategy:
      matrix:
        appname: ['aws-codedeploy-app']
        deploy-group: ['poc-react-app']
        s3-bucket: ['aws-codedeploy-poc-react-app']
        s3-filename: ['poc-react-app-${{ github.run_number }}']

    steps:
      
      # Install AWS CLI 2
      - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Create deployment to CodeDeploy
      - name: AWS Create Deployment
        id: deployment
        run: |
          DEPLOYMENT_ID=$(aws deploy create-deployment \
           --application-name ${{ matrix.appname }} \
           --deployment-config-name CodeDeployDefault.OneAtATime \
           --deployment-group-name ${{ matrix.deploy-group }} \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip --output text)
          echo "deployment_id=$DEPLOYMENT_ID" >> $GITHUB_OUTPUT
     
      - name: Check AWS CodeDeploy Deployment
        run: |
          aws deploy wait deployment-successful --deployment-id ${{ steps.deployment.outputs.deployment_id }}
          
